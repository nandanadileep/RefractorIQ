{
  "repository": "https://github.com/codelion/openevolve.git",
  "code_metrics": {
    "LOC": 37284,
    "TODOs_FIXME_HACK": 1,
    "AvgCyclomaticComplexity": 4.75,
    "DebtScore": 51.78,
    "TotalFunctions": 1161,
    "MaxComplexity": 139,
    "MinComplexity": 1,
    "FilesAnalyzed": 135,
    "ComplexityDistribution": {
      "low": 865,
      "medium": 175,
      "high": 80,
      "very_high": 41
    }
  },
  "dependency_metrics": {
    "total_files": 135,
    "total_functions": 826,
    "total_classes": 89,
    "total_external_dependencies": 0,
    "total_edges": 1044,
    "average_connections_per_node": 1.99,
    "most_dependent_files": [
      {
        "file": "openevolve/database.py",
        "dependencies": 69
      },
      {
        "file": "examples/mlx_metal_kernel_opt/evaluator.py",
        "dependencies": 38
      },
      {
        "file": "scripts/static/js/sidebar.js",
        "dependencies": 31
      },
      {
        "file": "scripts/static/js/graph.js",
        "dependencies": 24
      },
      {
        "file": "examples/algotune/task_adapter.py",
        "dependencies": 23
      }
    ],
    "most_depended_on_files": [
      {
        "file": "examples/alphaevolve_math_problems/erdos_min_overlap/initial_program.py",
        "dependents": 57
      },
      {
        "file": "openevolve/utils/format_utils.py",
        "dependents": 18
      },
      {
        "file": "examples/symbolic_regression/bench/dataclasses.py",
        "dependents": 12
      },
      {
        "file": "examples/signal_processing/initial_program.py",
        "dependents": 11
      },
      {
        "file": "openevolve/evaluation_result.py",
        "dependents": 10
      }
    ],
    "circular_dependencies": 5,
    "circular_dependency_chains": [
      [
        "setup.py"
      ],
      [
        "scripts/static/js/list.js"
      ],
      [
        "openevolve/llm/openai.py"
      ],
      [
        "examples/signal_processing/initial_program.py"
      ],
      [
        "examples/symbolic_regression/bench/dataclasses.py"
      ]
    ],
    "graph_density": 0.0009
  },
  "duplication_metrics": {
    "files_analyzed": 135,
    "duplicate_pairs_found": 38,
    "similarity_threshold": 0.85,
    "shingle_size_k": 5,
    "duplicates": [
      {
        "file_a": "examples/alphaevolve_math_problems/hexagon_packing/11/initial_program.py",
        "file_b": "examples/alphaevolve_math_problems/hexagon_packing/12/initial_program.py",
        "similarity": 0.9375
      },
      {
        "file_a": "examples/alphaevolve_math_problems/hexagon_packing/11/evaluator.py",
        "file_b": "examples/alphaevolve_math_problems/hexagon_packing/12/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/alphaevolve_math_problems/heilbronn_convex/14/initial_program.py",
        "file_b": "examples/alphaevolve_math_problems/heilbronn_convex/13/initial_program.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/alphaevolve_math_problems/heilbronn_convex/14/evaluator.py",
        "file_b": "examples/alphaevolve_math_problems/heilbronn_convex/13/evaluator.py",
        "similarity": 0.9453
      },
      {
        "file_a": "examples/alphaevolve_math_problems/minimizing_max_min_dist/3/evaluator.py",
        "file_b": "examples/alphaevolve_math_problems/minimizing_max_min_dist/2/evaluator.py",
        "similarity": 0.8828
      },
      {
        "file_a": "examples/circle_packing/initial_program.py",
        "file_b": "examples/circle_packing_with_artifacts/initial_program.py",
        "similarity": 1.0
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/affine_transform_2d/evaluator.py",
        "similarity": 0.9922
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/eigenvectors_complex/evaluator.py",
        "similarity": 1.0
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "similarity": 0.9844
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/polynomial_real/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9844
      },
      {
        "file_a": "examples/algotune/convolve2d_full_fill/evaluator.py",
        "file_b": "examples/algotune/lu_factorization/evaluator.py",
        "similarity": 0.9531
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/initial_program.py",
        "file_b": "examples/algotune/affine_transform_2d/best_program.py",
        "similarity": 0.9375
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/eigenvectors_complex/evaluator.py",
        "similarity": 0.9922
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/polynomial_real/evaluator.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/affine_transform_2d/evaluator.py",
        "file_b": "examples/algotune/lu_factorization/evaluator.py",
        "similarity": 0.9453
      },
      {
        "file_a": "examples/algotune/polynomial_real/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9531
      },
      {
        "file_a": "examples/algotune/polynomial_real/evaluator.py",
        "file_b": "examples/algotune/eigenvectors_complex/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/polynomial_real/evaluator.py",
        "file_b": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/algotune/polynomial_real/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9609
      },
      {
        "file_a": "examples/algotune/fft_cmplx_scipy_fftpack/initial_program.py",
        "file_b": "examples/algotune/fft_cmplx_scipy_fftpack/best_program.py",
        "similarity": 0.9297
      },
      {
        "file_a": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "file_b": "examples/algotune/eigenvectors_complex/evaluator.py",
        "similarity": 0.9844
      },
      {
        "file_a": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/algotune/fft_cmplx_scipy_fftpack/evaluator.py",
        "file_b": "examples/algotune/lu_factorization/evaluator.py",
        "similarity": 0.9375
      },
      {
        "file_a": "examples/algotune/lu_factorization/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9609
      },
      {
        "file_a": "examples/algotune/lu_factorization/evaluator.py",
        "file_b": "examples/algotune/eigenvectors_complex/evaluator.py",
        "similarity": 0.9531
      },
      {
        "file_a": "examples/algotune/lu_factorization/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9688
      },
      {
        "file_a": "examples/algotune/eigenvectors_complex/initial_program.py",
        "file_b": "examples/algotune/eigenvectors_complex/best_program.py",
        "similarity": 0.9375
      },
      {
        "file_a": "examples/algotune/eigenvectors_complex/evaluator.py",
        "file_b": "examples/algotune/fft_convolution/evaluator.py",
        "similarity": 0.9766
      },
      {
        "file_a": "examples/algotune/eigenvectors_complex/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9844
      },
      {
        "file_a": "examples/algotune/fft_convolution/initial_program.py",
        "file_b": "examples/algotune/fft_convolution/best_program.py",
        "similarity": 0.8906
      },
      {
        "file_a": "examples/algotune/fft_convolution/evaluator.py",
        "file_b": "examples/algotune/psd_cone_projection/evaluator.py",
        "similarity": 0.9922
      },
      {
        "file_a": "examples/algotune/psd_cone_projection/initial_program.py",
        "file_b": "examples/algotune/psd_cone_projection/best_program.py",
        "similarity": 0.9375
      }
    ]
  },
  "analysis_method": "Tree-sitter AST + NetworkX + MinHash (Async - Local Storage)",
  "excluded_third_party": true,
  "excluded_tests": true,
  "analysis_errors": []
}